using System;
using System.Collections.Generic;
using MySql.Data.MySqlClient;

class cardHolder
{
  String cardNum;
  int pin;
  String firstName;
  String lastName;
  double balance;

  public cardHolder(string cardNum, int pin, string firstName, string lastName, double balance)
  {
    this.cardNum = cardNum;
    this.pin = pin;
    this.firstName = firstName;
    this.lastName = lastName;
    this.balance = balance;
  }

  public String getNum()
  {
    return cardNum;
  }

  public int getPin()
  {
    return pin;
  }

  public String getFirstName()
  {
    return firstName;
  }

  public String getLastName()
  {
    return lastName;
  }

  public double getBalance()
  {
    return balance;
  }

  public void setNum(String newCardNum)
  {
    cardNum = newCardNum;
  }

  public void setPin(int newPin)
  {
    pin = newPin;
  }

  public void setFirstName(String newFirstName)
  {
    firstName = newFirstName;
  }

  public void setLastName(String newLastName)
  {
    lastName = newLastName;
  }

  public void setBalance(double newBalance)
  {
    balance = newBalance;
  }

  public static void Main(String[] args)
  {
    void PrintOptions()
    {
      Console.WriteLine("Please Choose One Of The Following Options...");
      Console.WriteLine("1. Deposit");
      Console.WriteLine("2. Withdraw");
      Console.WriteLine("3. Balance");
      Console.WriteLine("4. Exit");
    }

    void deposit(cardHolder currentUser)
    {
      Console.WriteLine("How much money You want to Deposit ?.");
      double deposit = Double.Parse(Console.ReadLine());
      currentUser.setBalance(currentUser.getBalance() + deposit);
      Console.WriteLine("Thank you For Depositing Your Money... Your Current Balance is: " + currentUser.getBalance());
    }

    void withdraw(cardHolder currentUser)
    {
      Console.WriteLine("How much money You want to Withdraw ?.");
      double withdrawal = Double.Parse(Console.ReadLine());
      if (currentUser.getBalance() < withdrawal)
      {
        Console.WriteLine("Insufficient Balance :(");
      }
      else
      {
        currentUser.setBalance(currentUser.getBalance() - withdrawal);
        Console.WriteLine("You' re Good to Go! Thank you. New balance: " + currentUser.getBalance());
      }
    }

    void Balance(cardHolder currentUser)
    {
      Console.WriteLine("Current Balance: " + currentUser.getBalance());
    }

    List<cardHolder> cardHolders = new();
    string connectionString = "server=localhost;user=root;password=kiroko4732;database=ATM_DB";
    MySqlConnection connection = new(connectionString);

    try
    {
      connection.Open();

      // Retrieve card holders from database


      string query = "SELECT * FROM cardholders";
      MySqlCommand command = new(query, connection);
      MySqlDataReader reader = command.ExecuteReader();



      while (reader.Read())
      {
        cardHolder ch = new(reader.GetString(1), reader.GetInt32(2), reader.GetString(3), reader.GetString(4), reader.GetDouble(5));
        cardHolders.Add(ch);
      }
      reader.Close();

      // Prompt user for card number and PIN
      Console.WriteLine("Welcome To SimpleATM");
      Console.WriteLine("Please Insert Your Debit Card:");
      String debitcardNum = "";
      cardHolder currentUser;

      while (true)
      {
        try
        {
          debitcardNum = Console.ReadLine();
          // Check database for card number
          currentUser = cardHolders.Find(a => a.getNum() == debitcardNum);
          if (currentUser != null) { break; }
          else { Console.WriteLine("Card not recognised. Please try again."); }
        }

        catch { Console.WriteLine("Card not recognised. Please try again."); }
      }

      Console.WriteLine("Please enter Your PIN:");
      int userPin = 0;
      while (true)
      {
        try
        {
          userPin = int.Parse(Console.ReadLine());
          // Check database for PIN
          if (currentUser.getPin() == userPin) { break; }
          else { Console.WriteLine("Incorrect PIN. Please try again."); }
        }

        catch { Console.WriteLine("Incorrect PIN. Please try again."); }
      }

      Console.WriteLine("Welcome " + currentUser.getFirstName() + " " + currentUser.getLastName() + " :)");
      int option = 0;
      do
      {
        PrintOptions();
        try
        {
          option = int.Parse(Console.ReadLine());
        }
        catch { }
        if (option == 1) { deposit(currentUser); }
        else if (option == 2) { withdraw(currentUser); }
        else if (option == 3) { Balance(currentUser); }
        else if (option == 4) { break; }
        else { option = 0; }
      }
      while (option != 4);
      Console.WriteLine("Thank You! Have a Nice Day :)");
    }
    catch (Exception e)
    {
      Console.WriteLine(e.Message);
    }
    finally
    {
      connection.Close();
    }
  }
}



